{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": ""
        },
        "resourcegroup": {
            "type": "string",
            "defaultValue": ""
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": ""
        },
        "workspace": {
            "type": "string",
            "defaultValue": ""
        },
        "workspaceapiversion": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "apiVersion": "[parameters('workspaceapiversion')]",
            "name": "[parameters('workspace')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[parameters('location')]",
            "id": "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
            "resources": [
                {
                    "apiVersion": "2015-11-01-preview",
                    "name": "Service Fabric Monitor",
                    "type": "views",
                    "location": "[parameters('location')]",
                    "id": "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'),'/views/Service Fabric Monitor')]",
                    "dependson": [
                        "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
                    ],
                    "properties": {
                        "Id": "Service Fabric Monitor",
                        "Name": "Service Fabric Monitor",
                        "Author": "dekapur@microsoft.com",
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "TwoTrendsAndListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Operational Channel",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Trend1": {
                                        "Legend": "Events",
                                        "LegendColor": "#00188f",
                                        "ChartQuery": "ServiceFabricOperationalEvent | sort by TimeGenerated desc// Oql: Type=ServiceFabricOperationalEvent",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "Trend2": {
                                        "Legend": "All ",
                                        "LegendColor": "#0072c6",
                                        "ChartQuery": "",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "List": {
                                        "Query": "ServiceFabricOperationalEvent | summarize AggregatedValue = count() by Computer, TaskName // Oql: Type=ServiceFabricOperationalEvent | measure count() by Computer, TaskName",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Node",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search in (ServiceFabricOperationalEvent) {selected item}// Oql: (Type=ServiceFabricOperationalEvent) {selected item}"
                                    }
                                }
                            },
                            {
                                "Id": "TwoTrendsAndListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Container logs",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Trend1": {
                                        "Legend": "Stdout",
                                        "LegendColor": "#00188f",
                                        "ChartQuery": "ContainerLog | where LogEntrySource == \"stdout\" | sort by TimeGenerated desc// Oql: Type=ContainerLog LogEntrySource=stdout",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "Trend2": {
                                        "Legend": "Stderr",
                                        "LegendColor": "#eb3c00",
                                        "ChartQuery": "ContainerLog | where LogEntrySource == \"stderr\" | sort by TimeGenerated desc// Oql: Type=ContainerLog LogEntrySource=stderr",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "List": {
                                        "Query": "ContainerLog | summarize AggregatedValue = count() by Computer, Name// Oql: Type=ContainerLog  | measure count() by Computer, Name",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Node",
                                            "Value": "Events"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search in (ContainerLog) {selected item} | project TimeGenerated, Computer, Name, Image, ImageTag, LogEntrySource, LogEntry | render table// Oql: Type=ContainerLog {selected item} | select TimeGenerated, Computer, Name, Image, ImageTag, LogEntrySource, LogEntry | Display Table"
                                    }
                                }
                            },
                            {
                                "Id": "TwoTrendsAndListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Reliable Services Events",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Trend1": {
                                        "Legend": "events",
                                        "LegendColor": "#00188f",
                                        "ChartQuery": "ServiceFabricReliableServiceEvent | sort by TimeGenerated desc\r\n// Oql: Type=ServiceFabricReliableServiceEvent",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "Trend2": {
                                        "Legend": "",
                                        "LegendColor": "#0072c6",
                                        "ChartQuery": "",
                                        "Calculation": {
                                            "Operation": "Sum"
                                        }
                                    },
                                    "List": {
                                        "Query": "ServiceFabricReliableServiceEvent | summarize AggregatedValue = count() by Computer\r\n// Oql: Type=ServiceFabricReliableServiceEvent | measure count() by Computer",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Node",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item}\r\n// Oql: {selected item}"
                                    }
                                }
                            },
                            {
                                "Id": "TwoNumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Application and Service Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Legend": "Application Count",
                                        "Query": "ServiceFabricReliableServiceEvent | where ApplicationName != \"\" | summarize AggregatedValue = dcount(ApplicationName) // Oql: (Type=ServiceFabricReliableServiceEvent) NOT(ServiceName=\"\") | measure countdistinct(ApplicationName) by ApplicationName"
                                    },
                                    "SecondTile": {
                                        "Legend": "Service Count",
                                        "Query": "ServiceFabricReliableServiceEvent | where ServiceName != \"\" | summarize AggregatedValue = dcount(ServiceName) // Oql: (Type=ServiceFabricReliableServiceEvent) NOT(ServiceName=\"\") | measure countdistinct(ServiceName) by ServiceName"
                                    },
                                    "List": {
                                        "Query": "ServiceFabricReliableServiceEvent | where ApplicationName != \"\" | summarize AggregatedValue = count() by ApplicationName, ServiceName, Computer // Oql: ServiceFabricReliableServiceEvent | measure count() by ApplicationName, ServiceName, Computer",
                                        "HideGraph": true,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "ApplicationName",
                                            "Value": "Events"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item}// Oql: {selected item}"
                                    }
                                }
                            },
                            {
                                "Id": "TwoNumberTileListBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Container Image Inventory",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Tile": {
                                        "Legend": "Images",
                                        "Query": "ContainerImageInventory | summarize AggregatedValue = count() by ImageID| count // Oql: Type=ContainerImageInventory  | measure count() by ImageID"
                                    },
                                    "SecondTile": {
                                        "Legend": "Image Type Count",
                                        "Query": "ContainerImageInventory | summarize AggregatedValue = count() by Image| count // Oql: Type=ContainerImageInventory  | measure count() by Image"
                                    },
                                    "List": {
                                        "Query": "ContainerImageInventory | summarize AggregatedValue = count() by Image, ImageTag, Running// Oql: Type=ContainerImageInventory  | measure count() by Image, ImageTag, Running",
                                        "HideGraph": false,
                                        "enableSparklines": false,
                                        "operation": "Summary",
                                        "ColumnsTitle": {
                                            "Name": "Node",
                                            "Value": "Count"
                                        },
                                        "Color": "#0072c6",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "search {selected item}// Oql: {selected item}"
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Container metrics",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "CPU (%)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where ObjectName == \"Container\" and CounterName == \"% Processor Time\" | summarize AvgCPUPercent = avg(CounterValue) by InstanceName, bin(TimeGenerated, 30m) | render timechart // Oql: Type = Perf  ObjectName= \"Container\" CounterName=\"% Processor Time\" | Measure Avg(CounterValue) as AvgCPUPercent by InstanceName interval 30minutes",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Memory (%)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where ObjectName == \"Container\" and CounterName == \"Memory Usage MB\" | summarize AvgUsedMemory = avg(CounterValue) by InstanceName, bin(TimeGenerated, 30m) | render timechart// Oql: Type=Perf ObjectName=Container CounterName=\"Memory Usage MB\" | Measure Avg(CounterValue) as AvgUsedMemory by InstanceName interval 30minute",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Disk Write (MB)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where ObjectName == \"Container\" and CounterName == \"Disk Writes MB\" | summarize AvgDiskWrite = avg(CounterValue) by InstanceName, bin(TimeGenerated, 30m) | render timechart// Oql: Type=Perf ObjectName=Container (CounterName=\"Disk Writes MB\") | Measure Avg(CounterValue) as AvgDiskWrite by InstanceName interval 30minute",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "LineChartCalloutStackedBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Node metrics",
                                        "newGroup": false
                                    },
                                    "charts": [
                                        {
                                            "Header": {
                                                "Title": "CPU (%)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where CounterName == \"% Processor Time\" and InstanceName == \"_Total\" | summarize AvgCPUPercent = avg(CounterValue) by Computer, bin(TimeGenerated, 30m) | render timechart// Oql: Type=Perf CounterName=\"% Processor Time\" InstanceName=\"_Total\" | Measure Avg(CounterValue) as AvgCPUPercent by Computer interval 30minute",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Memory (%)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where ObjectName == \"Memory\" and (CounterName == \"% Used Memory\" or CounterName == \"% Committed Bytes In Use\") | summarize AvgUsedMemory = avg(CounterValue) by Computer, bin(TimeGenerated, 30m) | render timechart // Oql: Type=Perf ObjectName=Memory (CounterName=\"% Used Memory\" OR CounterName=\"% Committed Bytes In Use\") |Measure Avg(CounterValue) as AvgUsedMemory by Computer interval 30minute",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        },
                                        {
                                            "Header": {
                                                "Title": "Disk usage (MB)",
                                                "Subtitle": ""
                                            },
                                            "LineChart": {
                                                "Query": "Perf | where CounterName == \"Free Megabytes\" and (InstanceName == \"/\" or InstanceName == \"_Total\") | summarize FreeDiskSpace = max(CounterValue) by Computer, bin(TimeGenerated, 30m) | render timechart// Oql: Type=Perf (CounterName=\"Free Megabytes\") (InstanceName=\"/\" OR InstanceName=\"_Total\") | Measure Max(CounterValue) as FreeDiskSpace by Computer interval 30minute",
                                                "yAxis": {
                                                    "isLogarithmic": false,
                                                    "units": {
                                                        "baseUnitType": "",
                                                        "baseUnit": "",
                                                        "displayUnit": ""
                                                    },
                                                    "customLabel": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "Id": "NotableQueriesBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Sample queries",
                                        "newGroup": false,
                                        "preselectedFilters": "Type, Computer",
                                        "renderMode": "grid"
                                    },
                                    "queries": [
                                        {
                                            "query": "ETWEvent | where Computer in ((union ServiceFabricOperationalEvent, ServiceFabricReliableServiceEvent, ServiceFabricReliableActorEvent | distinct Computer)) | sort by TimeGenerated desc// Oql: Type=ETWEvent Computer IN {(Type=ServiceFabricReliableServiceEvent OR Type=ServiceFabricReliableActorEvent OR Type=ServiceFabricOperationalEvent) | distinct Computer}",
                                            "displayName": "Application events (ETW)"
                                        },
                                        {
                                            "query": "ContainerInventory | sort by TimeGenerated desc | project Computer, Name, Image, ImageTag, ContainerState, CreatedTime, StartedTime, FinishedTime | render table// Oql: Type=ContainerInventory   |select  Computer, Name, Image, ImageTag, ContainerState, CreatedTime, StartedTime, FinishedTime | Display Table",
                                            "displayName": "List all container lifecycle information"
                                        },
                                        {
                                            "query": "ContainerImageInventory | sort by TimeGenerated desc | project Computer, Image, ImageTag, ImageSize, Running | render table// Oql: Type=ContainerImageInventory | select Computer, Image, ImageTag, ImageSize, Running | Display Table",
                                            "displayName": "List of container images on each node"
                                        },
                                        {
                                            "query": "ContainerServiceLog | where TimeGenerated > ago(24h) | sort by TimeGenerated desc// Oql: Type=ContainerServiceLog TimeGenerated > NOW-24HOURS",
                                            "displayName": "Container service logs in the past 24 hours."
                                        },
                                        {
                                            "query": "ServiceFabricReliableActorEvent | sort by TimeGenerated desc// Oql: Type=ServiceFabricReliableActorEvent",
                                            "displayName": "List of all Reliable Actors events"
                                        },
                                        {
                                            "query": "ServiceFabricReliableActorEvent | where TaskName == \"ReplicaChangeRoleToPrimary\" | summarize AggregatedValue = count() by ReplicaId// Oql: Type=ServiceFabricReliableActorEvent TaskName=ReplicaChangeRoleToPrimary | measure count() by ReplicaId",
                                            "displayName": "Replica IDs of stateful actor replicas that became primary"
                                        },
                                        {
                                            "query": "ServiceFabricReliableActorEvent | where TaskName == \"ActorMethodThrewException\" | summarize AggregatedValue = count() by ActorId// Oql: Type=ServiceFabricReliableActorEvent AND TaskName=ActorMethodThrewException | measure count() by ActorId",
                                            "displayName": "List of actor exceptions thrown"
                                        }
                                    ]
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "TwoTrendsBuilderTile",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Trend1": {
                                    "Legend": "Operational Channel Events",
                                    "LegendColor": "#00188f",
                                    "ChartQuery": "ServiceFabricOperationalEvent | sort by TimeGenerated desc// Oql: Type=ServiceFabricOperationalEvent",
                                    "Calculation": {
                                        "Operation": "Sum"
                                    }
                                },
                                "Trend2": {
                                    "Legend": "Container Events",
                                    "LegendColor": "#0072c6",
                                    "ChartQuery": "ContainerLog | sort by TimeGenerated desc// Oql: Type=ContainerLog",
                                    "Calculation": {
                                        "Operation": "Sum"
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | sort by TimeGenerated desc",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    ]
}